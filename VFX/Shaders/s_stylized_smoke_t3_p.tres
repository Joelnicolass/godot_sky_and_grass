[gd_resource type="VisualShader" load_steps=9 format=3 uid="uid://dqd356d6uqaa2"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ch8o3"]
parameter_name = "Color"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_xnfcv"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_0epkv"]
parameter_name = "Disolver_Texture"
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_j8cwg"]
expanded_output_ports = [0]
source = 5
texture_type = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_1vxgt"]
function = 1

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_qh1y7"]
expanded_output_ports = [0]
parameter_name = "Texture_Scale"
default_value_enabled = true
default_value = Vector2(1, 1)

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_q0wvu"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_a2koh"]
operator = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_disabled, diffuse_lambert, specular_schlick_ggx;

uniform vec4 Color : source_color;
uniform vec2 Texture_Scale = vec2(1.000000, 1.000000);
uniform sampler2D Disolver_Texture : source_color;



void fragment() {
// ColorParameter:10
	vec4 n_out10p0 = Color;


// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p1 = n_out2p0.r;
	float n_out2p4 = n_out2p0.a;


// Vector2Parameter:6
	vec2 n_out6p0 = Texture_Scale;


// UVFunc:5
	vec2 n_in5p2 = vec2(0.00000, 0.00000);
	vec2 n_out5p0 = (UV - n_in5p2) * n_out6p0 + n_in5p2;


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(Disolver_Texture, n_out5p0);
	float n_out4p1 = n_out4p0.r;


// Step:8
	float n_out8p0 = step(n_out2p4, n_out4p1);


// FloatOp:9
	float n_out9p0 = n_out8p0 * n_out2p1;


// Output:0
	ALBEDO = vec3(n_out10p0.xyz);
	ALPHA = n_out9p0;
	EMISSION = vec3(n_out10p0.xyz);


}
"
modes/depth_draw = 1
modes/cull = 2
nodes/fragment/0/position = Vector2(580, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_xnfcv")
nodes/fragment/2/position = Vector2(-420, 700)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_0epkv")
nodes/fragment/3/position = Vector2(-520, 300)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_j8cwg")
nodes/fragment/4/position = Vector2(-520, 60)
nodes/fragment/5/node = SubResource("VisualShaderNodeUVFunc_1vxgt")
nodes/fragment/5/position = Vector2(-860, 40)
nodes/fragment/6/node = SubResource("VisualShaderNodeVec2Parameter_qh1y7")
nodes/fragment/6/position = Vector2(-1260, 140)
nodes/fragment/8/node = SubResource("VisualShaderNodeStep_q0wvu")
nodes/fragment/8/position = Vector2(0, 280)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatOp_a2koh")
nodes/fragment/9/position = Vector2(240, 300)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorParameter_ch8o3")
nodes/fragment/10/position = Vector2(140, 620)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 2, 5, 0, 4, 0, 6, 0, 5, 1, 4, 1, 8, 1, 2, 4, 8, 0, 9, 0, 0, 1, 8, 0, 9, 0, 2, 1, 9, 1, 10, 0, 0, 5, 10, 0, 0, 0)
